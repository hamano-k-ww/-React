//コンポーネントの魅力は再利用のしやすさにある。
//コンポーネントのネストが増えてくると、それらを別のファイルに分割したくなってきます。
//すべてのコンポーネントの頂点に立つ最も親となるコンポーネントです。家を建てる際の「土台」に例える
//コンポーネントの移動
    //コンポーネントを置くための新しい JS ファイルを作成する
    //デフォルトエクスポートあるいは名前付きエクスポートのいずれかを使い、関数コンポーネントをそのファイルからエクスポートする。
    //そのコンポーネントを、利用する側のファイルでインポートする

//例：App.js から Gallery.js という新しいファイルに移動しています。
//Gallery.js から Gallery をデフォルトインポートしている。
//ルートの App コンポーネントをデフォルトエクスポートしている。

import Gellry from './Gallery.js';

export default funciton App(){
    return (
        <Gellry />
    );
}

/*
JavaScriptには値をエクスポートする主な方法が 2 つあります。デフォルトエクスポートと名前付きエクスポートです。
ファイルにはデフォルトエクスポートは 1 つまでしか置けませんが、名前付きエクスポートは好きなだけ置くことができます。
ファイルがコンポーネントを 1 つだけエクスポートする場合はデフォルトエクスポートが、複数のコンポーネントや値をエクスポートする場合は名前付きエクスポートがよく使われます
*/

//同じファイルから複数のコンポーネントをエクスポート・インポートする
//名前付きエクスポートを使う（efault キーワードは付けない）
export function Profile(){
    ・
    ・
    ・
}

import {Profile} from '.Gallery.js';
export default funciton App(){
    return <Profile />;
}